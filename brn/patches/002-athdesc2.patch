diff --git a/net80211/ieee80211_linux.c b/net80211/ieee80211_linux.c
index 3016c9b..ddbc993 100644
--- a/net80211/ieee80211_linux.c
+++ b/net80211/ieee80211_linux.c
@@ -572,7 +572,8 @@ IEEE80211_SYSCTL_DECL(ieee80211_sysctl_dev_type, ctl, write, filp, buffer,
 			if (val == ARPHRD_IEEE80211_RADIOTAP ||
 			    val == ARPHRD_IEEE80211 ||
 			    val == ARPHRD_IEEE80211_PRISM ||
-			    val == ARPHRD_IEEE80211_ATHDESC) {
+			    val == ARPHRD_IEEE80211_ATHDESC ||
+			    val == ARPHRD_IEEE80211_ATHDESC2) {
 				vap->iv_dev->type = val;
 			}
 		}
diff --git a/net80211/ieee80211_monitor.c b/net80211/ieee80211_monitor.c
index 3b3f65a..71dac5d 100644
--- a/net80211/ieee80211_monitor.c
+++ b/net80211/ieee80211_monitor.c
@@ -262,7 +262,8 @@ ieee80211_monitor_encap(struct ieee80211vap *vap, struct sk_buff *skb)
 			ph->try[0] = 1;
 		break;
 	}
-	case ARPHRD_IEEE80211_ATHDESC: {
+	case ARPHRD_IEEE80211_ATHDESC:
+	case ARPHRD_IEEE80211_ATHDESC2: {
 		if (skb->len > ATHDESC_HEADER_SIZE) {
 			struct ar5212_openbsd_desc *desc =
 				(struct ar5212_openbsd_desc *)(skb->data + 8);
@@ -302,6 +303,8 @@ ieee80211_input_monitor(struct ieee80211com *ic, struct sk_buff *skb,
 	int noise = 0, antenna = 0, ieeerate = 0;
 	u_int32_t rssi = 0;
 	u_int8_t pkttype = 0;
+	u_int8_t *skb1_data;
+	struct ath2_header ath2_h;
 
 	if (tx) {
 		rssi = bf->bf_dsstatus.ds_txstat.ts_rssi;
@@ -556,6 +560,58 @@ ieee80211_input_monitor(struct ieee80211com *ic, struct sk_buff *skb,
 					ds, ATHDESC_HEADER_SIZE);
 			break;
 		}
+		case ARPHRD_IEEE80211_ATHDESC2: {
+			if (skb_headroom(skb1) < ATHDESC2_HEADER_SIZE) {
+				printk("%s:%d %s\n", __FILE__, 
+						__LINE__, __func__);
+				ieee80211_dev_kfree_skb(&skb1);
+				break;
+			}
+			
+			ath2_h.ath2_version = ATHDESC2_VERSION;
+			ath2_h.madwifi_version = MADWIFI_TRUNK;
+
+			if (tx)
+			{
+				ath2_h.anno.tx.ts_seqnum = bf->bf_dsstatus.ds_txstat.ts_seqnum;
+				ath2_h.anno.tx.ts_tstamp = bf->bf_dsstatus.ds_txstat.ts_tstamp;
+				ath2_h.anno.tx.ts_status = bf->bf_dsstatus.ds_txstat.ts_status;
+				ath2_h.anno.tx.ts_rate = bf->bf_dsstatus.ds_txstat.ts_rate;
+				ath2_h.anno.tx.ts_rssi = bf->bf_dsstatus.ds_txstat.ts_rssi;
+				ath2_h.anno.tx.ts_shortretry = bf->bf_dsstatus.ds_txstat.ts_shortretry;
+				ath2_h.anno.tx.ts_longretry = bf->bf_dsstatus.ds_txstat.ts_longretry;
+				ath2_h.anno.tx.ts_virtcol = bf->bf_dsstatus.ds_txstat.ts_virtcol;
+				ath2_h.anno.tx.ts_antenna = bf->bf_dsstatus.ds_txstat.ts_antenna;
+				ath2_h.anno.tx.ts_finaltsi = bf->bf_dsstatus.ds_txstat.ts_finaltsi;
+
+				ath2_h.anno.tx.ts_hosttime = jiffies;
+				ath2_h.anno.tx.ts_mactime = mactime;
+				ath2_h.anno.tx.ts_noise = (int8_t) noise;
+			}
+			else
+			{
+				ath2_h.anno.rx.rs_datalen = bf->bf_dsstatus.ds_rxstat.rs_datalen;
+				ath2_h.anno.rx.rs_status = bf->bf_dsstatus.ds_rxstat.rs_status;
+				ath2_h.anno.rx.rs_phyerr = bf->bf_dsstatus.ds_rxstat.rs_phyerr;
+				ath2_h.anno.rx.rs_rssi = bf->bf_dsstatus.ds_rxstat.rs_rssi;
+				ath2_h.anno.rx.rs_keyix = bf->bf_dsstatus.ds_rxstat.rs_keyix;
+				ath2_h.anno.rx.rs_rate = bf->bf_dsstatus.ds_rxstat.rs_rate;
+				ath2_h.anno.rx.rs_more = bf->bf_dsstatus.ds_rxstat.rs_more;
+				ath2_h.anno.rx.rs_tstamp = bf->bf_dsstatus.ds_rxstat.rs_tstamp;
+				ath2_h.anno.rx.rs_antenna = bf->bf_dsstatus.ds_rxstat.rs_antenna;
+
+				ath2_h.anno.rx.rs_hosttime = jiffies;
+				ath2_h.anno.rx.rs_mactime = mactime;
+				ath2_h.anno.rx.rs_noise = (int8_t) noise;
+			}
+
+			skb1_data = skb_push(skb1, ATHDESC2_HEADER_SIZE);
+			
+			memcpy(skb1_data, ds, ATHDESC_HEADER_SIZE);
+			memcpy(&(skb1_data[ATHDESC_HEADER_SIZE]), &(ath2_h), ATHDESC2_BRN_HEADER_SIZE );
+			/*Copy the hole rx/tx-status and brn extra*/
+			break;
+		}
 		default:
 			break;
 		}
diff --git a/net80211/ieee80211_monitor.h b/net80211/ieee80211_monitor.h
index 991b868..537d215 100644
--- a/net80211/ieee80211_monitor.h
+++ b/net80211/ieee80211_monitor.h
@@ -43,6 +43,8 @@
 
 #define ATHDESC_HEADER_SIZE	32
 
+#include <net80211/ieee80211_monitor_brn.h>
+
 #define IEEE80211_MON_MAXHDROOM ((unsigned int)			\
 	A_MAX(sizeof(struct ath_tx_radiotap_header),		\
 	      A_MAX(sizeof(struct wlan_ng_prism2_header),	\
diff --git a/net80211/ieee80211_monitor_ath2.h b/net80211/ieee80211_monitor_ath2.h
new file mode 100644
index 0000000..09a67e0
--- /dev/null
+++ b/net80211/ieee80211_monitor_ath2.h
@@ -0,0 +1,75 @@
+#ifndef _NET80211_IEEE80211_MONITOR_ATH2_H_
+#define _NET80211_IEEE80211_MONITOR_ATH2_H_
+
+struct ath2_rx_status {
+    u_int16_t	rs_datalen; /* rx frame length */
+    u_int8_t	rs_status;  /* rx status, 0 => recv ok */
+    u_int8_t	rs_phyerr;  /* phy error code */
+
+    int8_t	rs_rssi;    /* rx frame RSSI (combined for 11n) */
+    u_int8_t	rs_keyix;   /* key cache index */
+    u_int8_t	rs_rate;    /* h/w receive rate index */
+    u_int8_t	rs_more;    /* more descriptors follow */
+
+    u_int32_t	rs_tstamp;  /* h/w assigned timestamp */
+    u_int32_t	rs_antenna; /* antenna information */
+
+    u_int64_t	rs_hosttime;
+    u_int64_t	rs_mactime;
+
+    int8_t	rs_noise;
+    int8_t	reserved[3];
+
+} __attribute__ ((packed));
+
+struct ath2_tx_status {
+    u_int16_t	ts_seqnum;    /* h/w assigned sequence number */
+    u_int16_t	ts_tstamp;    /* h/w assigned timestamp */
+
+    u_int8_t	ts_status;    /* frame status, 0 => xmit ok */
+    u_int8_t	ts_rate;      /* h/w transmit rate index */
+    int8_t	ts_rssi;      /* tx ack RSSI */
+    u_int8_t	ts_shortretry;/* # short retries */
+
+    u_int8_t	ts_longretry; /* # long retries */
+    u_int8_t	ts_virtcol;   /* virtual collision count */
+    u_int8_t	ts_antenna;   /* antenna information */
+    u_int8_t	ts_finaltsi;  /* final transmit series index */
+
+    u_int64_t	ts_hosttime;
+    u_int64_t	ts_mactime;
+
+    int8_t	ts_noise;
+    int8_t	reserved[3];
+
+} __attribute__ ((packed));
+
+struct ath2_tx_anno {
+
+    int8_t channel;
+
+    u_int8_t mac[6];
+
+} __attribute__ ((packed));
+
+
+struct ath2_header {
+    u_int16_t ath2_version;
+    u_int16_t madwifi_version;
+
+    union {
+      struct ath2_rx_status rx;
+      struct ath2_tx_status tx;
+      struct ath2_tx_anno tx_anno;
+    } anno; 
+
+} __attribute__ ((packed));
+
+#define ATHDESC2_VERSION 0xF2F2
+
+#define MADWIFI_0940	0x03ac
+#define MADWIFI_3869	0x0f1d
+
+#define MADWIFI_TRUNK MADWIFI_3869
+
+#endif
diff --git a/net80211/ieee80211_monitor_brn.h b/net80211/ieee80211_monitor_brn.h
new file mode 100644
index 0000000..27c5379
--- /dev/null
+++ b/net80211/ieee80211_monitor_brn.h
@@ -0,0 +1,17 @@
+#ifndef _NET80211_IEEE80211_MONITOR_BRN_H_
+#define _NET80211_IEEE80211_MONITOR_BRN_H_
+
+#include <net80211/ieee80211_monitor.h>
+#include <ah_desc.h>
+#include <ath/if_athvar.h>
+
+#include <net80211/ieee80211_monitor_ath2.h>
+
+#ifndef ARPHRD_IEEE80211_ATHDESC2
+#define ARPHRD_IEEE80211_ATHDESC2  805 /* IEEE 802.11 + atheros (long) descriptor */
+#endif /* ARPHRD_IEEE80211_ATHDESC2 */
+
+#define ATHDESC2_BRN_HEADER_SIZE sizeof(struct ath2_header)
+#define ATHDESC2_HEADER_SIZE	( ATHDESC_HEADER_SIZE + ATHDESC2_BRN_HEADER_SIZE ) 
+
+#endif
